as.data.frame() %>%
ggplot(aes(x=Data, y=Fitted))+
geom_point()+
ylab("적합값 (예측된 값)")+
xlab("데이터 (예측된 값)")+
ggtitle("미국 소비 지출의 백분율 변화")+
geom_abline(intercept = 0, slope=1)
checkresiduals(fit.consMR)
df <- as.data.frame(uschange)
df[,"Residuals"] <- as.numeric(residuals(fit.consMR) )
p1 <- ggplot(df, aes(x=Income, y=Residuals))+
geom_point()+xlab("소득")+ylab("잔차")
p2 <- ggplot(df, aes(x=Production, y=Residuals))+
geom_point()+xlab("생산")+ylab("잔차")
p3 <- ggplot(df, aes(x=Savings, y=Residuals))+
geom_point()+ xlab("소득")+ylab("잔차")
p4 <- ggplot(df, aes(x=Unemployment, y=Residuals))+
geom_point() + xlab("실업률")+ylab("잔차")
gridExtra::grid.arrange(p1,p2,p3,p4,nrow=2)
cbind(Fitted = fitted(fit.consMR),
Residuals = residuals(fit.consMR)
) %>%
as.data.frame() %>%
ggplot(aes(x=Fitted, y=Residuals))+geom_point()+
xlab("적합값")+ylab("잔차")
aussies <- window(ausair, end=2011)
fit <- tslm(aussies ~ guinearice)
summary(fit)
checkresiduals(fit)
beer2 <- window(ausbeer, start=1992)
autoplot(beer2)+xlab("연도")+ylab("백만 리터")
fit.beer <- tslm(beer2 ~ trend + season)
summary(fit.beer)
autoplot(beer2, series = "데이터")+
autolayer(fitted(fit.beer),series = "적합값")+
xlab("연도")+ylab("백만 리터")+
guides(colour=guide_legend(title=" "))+
ggtitle("분기별 맥주 생산량")
cbind(Data=beer2, Fitted=fitted(fit.beer)) %>%
as.data.frame() %>%
ggplot(aes(x = Data, y=Fitted,
colour = as.factor(cycle(beer2))
)
)+
geom_point()+
ylab("적합값")+xlab("실제 값")+
ggtitle("분기별 맥주 생산량")+
scale_colour_brewer(palette="Dark2",name="분기")+
geom_abline(intercept = 0, slope=1)
fourier.beer <- tslm(beer2 ~ trend + fourier(beer2, k=2))
fourier.beer <- tslm(beer2 ~ trend + fourier(beer2, k=2))
fourier.beer <- tslm(beer2 ~ trend + fourier(beer2))
fourier.beer <- tslm(beer2 ~ trend + fourier(beer2,2))
fourier.beer <- tslm(beer2 ~ trend + fourier(beer2,K=2))
summary(fourier.beer)
CV(fit.consMR)
library(fpp2)
colnames(uschange)[1:2] <- c("소비","소득")
autoplot(uschange[,c("소비","소득")])+
ylab("%변화")+xlab("연도")+
guides(colour=guide_legend(title=" "))
uschange %>%
as.data.frame() %>%
ggplot(aes(x=소득, y= 소비))+
xlab("소비 (분기별 %변화")+
ylab("소득 (분기별 %변화")+
geom_point()+
geom_smooth(method="lm", se=FALSE)
uschange
tslm(소비 ~ 소득, data = uschange)
colnames(uschange) <- c("소비","소득","생산","저축","실업률")
uschange %>%
as.data.frame() %>%
GGally::ggpairs()
colnames(uschange) <- c("Consumption","Income","Production",
"Savings","Unemployment")
fit.consMR <- tslm(
Consumption ~ Income+Production+Unemployment+Savings,
uschange
)
summary(fit.consMR)
autoplot(uschange[, 'Consumption'], series="데이터")+
autolayer(fitted(fit.consMR), series = "적합값")+
xlab("연도")+ylab("")+
ggtitle("미국 소비 주출의 백분율 변화")+
guides(colour=guide_legend(title=" "))
cbind(Data= uschange[,"Consumption"],
Fitted = fitted(fit.consMR)) %>%
as.data.frame() %>%
ggplot(aes(x=Data, y=Fitted))+
geom_point()+
ylab("적합값 (예측된 값)")+
xlab("데이터 (예측된 값)")+
ggtitle("미국 소비 지출의 백분율 변화")+
geom_abline(intercept = 0, slope=1)
checkresiduals(fit.consMR)
df <- as.data.frame(uschange)
df[,"Residuals"] <- as.numeric(residuals(fit.consMR) )
p1 <- ggplot(df, aes(x=Income, y=Residuals))+
geom_point()+xlab("소득")+ylab("잔차")
p2 <- ggplot(df, aes(x=Production, y=Residuals))+
geom_point()+xlab("생산")+ylab("잔차")
p3 <- ggplot(df, aes(x=Savings, y=Residuals))+
geom_point()+ xlab("소득")+ylab("잔차")
p4 <- ggplot(df, aes(x=Unemployment, y=Residuals))+
geom_point() + xlab("실업률")+ylab("잔차")
gridExtra::grid.arrange(p1,p2,p3,p4,nrow=2)
cbind(Fitted = fitted(fit.consMR),
Residuals = residuals(fit.consMR)
) %>%
as.data.frame() %>%
ggplot(aes(x=Fitted, y=Residuals))+geom_point()+
xlab("적합값")+ylab("잔차")
aussies <- window(ausair, end=2011)
fit <- tslm(aussies ~ guinearice)
summary(fit)
checkresiduals(fit)
beer2 <- window(ausbeer, start=1992)
autoplot(beer2)+xlab("연도")+ylab("백만 리터")
fit.beer <- tslm(beer2 ~ trend + season)
summary(fit.beer)
autoplot(beer2, series = "데이터")+
autolayer(fitted(fit.beer),series = "적합값")+
xlab("연도")+ylab("백만 리터")+
guides(colour=guide_legend(title=" "))+
ggtitle("분기별 맥주 생산량")
cbind(Data=beer2, Fitted=fitted(fit.beer)) %>%
as.data.frame() %>%
ggplot(aes(x = Data, y=Fitted,
colour = as.factor(cycle(beer2))
)
)+
geom_point()+
ylab("적합값")+xlab("실제 값")+
ggtitle("분기별 맥주 생산량")+
scale_colour_brewer(palette="Dark2",name="분기")+
geom_abline(intercept = 0, slope=1)
fourier.beer <- tslm(beer2 ~ trend + fourier(beer2,K=2))
summary(fourier.beer)
CV(fit.consMR)
beer2 <- window(ausbeer, start=1992)
fit.beer <- tslm(beer2 ~ trend + season)
fcat <- forecast(fit.beer)
autoplot(fcast)+
ggtitle("회귀를 이용한 맥주 생산량 예측값")+
xlab("연도")+ylab("백만 리터")
fcast <- forecast(fit.beer)
autoplot(fcast)+
ggtitle("회귀를 이용한 맥주 생산량 예측값")+
xlab("연도")+ylab("백만 리터")
fit.consBest <- tslm(Consumption ~ Income + Savings + Unemployment,
data = uschange)
h <- 4
newdata <- data.frame(
Income= c(1,1,1,1),
Savings = c(0.5,0.5,0.5,0.5),
Unemployment = c(0,0,0,0)
)
fcast.up <- forecast(fit.consBest, newdata = newdata)
newdata <- data.frame(
Income = rep(-1,h),
Savings = rep(-0.5, h),
Unemployment = rep(0, h)
)
fcast.down <- forecast(fit.consBest, newdata = newdata)
newdata <- data.frame(
Income = rep(-1,h),
Savings = rep(-0.5, h),
Unemployment = rep(0, h)
)
fcast.down <- forecast(fit.consBest, newdata = newdata)
autoplot(uschange[,1])+
ylab("미국 소비 지출%변화")+
autolayer(fcast.up, PI = T, series="증가")+
autolayer(fcast.down, PI=T, series = "감소")+
guides(colour= guide_legend(title="시나리오"))+
xlab("연도")
fit.cons <- tslm(Consumption ~ Income, data = uschange)
fcast.ave <- forecast(fit.cons,
newdata = data.frame(
Income = rep(mean(uschange[,"Income"]),h)
)
)
fcast.up <- forecast(fit.cons,
newdata = data.frame(Income = rep(5,h))
)
sutoplot(uschange[,"Consumption"])+
ylab("미국 소비%변화")+
autolayer(fcast.ave, series = "평균적인 증가",
PI=T)+
autolayer(fcast.up, series = "극단적인 증가",
PI=T)+
guides(colour = guide_legend(title = "시나리오"))+
xlab("연도")
ㅁㅁutoplot(uschange[,"Consumption"])+
ylab("미국 소비%변화")+
autolayer(fcast.ave, series = "평균적인 증가",
PI=T)+
autolayer(fcast.up, series = "극단적인 증가",
PI=T)+
guides(colour = guide_legend(title = "시나리오"))+
xlab("연도")
autoplot(uschange[,"Consumption"])+
ylab("미국 소비%변화")+
autolayer(fcast.ave, series = "평균적인 증가",
PI=T)+
autolayer(fcast.up, series = "극단적인 증가",
PI=T)+
guides(colour = guide_legend(title = "시나리오"))+
xlab("연도")
h <- 10
fit.lin <- tslm(marathon ~ trend)
fcasts.lin <- forecast(fit..lin, h = h)
fcasts.lin <- forecast(fit.lin, h = h)
fit.exp <- tslm(marathon ~ trend, lambda = 0)
fcasts.exp <- forecast(fit.exp, h=h)
t <-  time(marathon)
t.break1 <- 1940
t.break2 <- 1980
tb1 <- ts(pmax(0, t - t.break1), start = 1897)
tb2 <-ts(pmax(0, t -t.break2), start = 1897)
fit.pw <- tslm(marathon ~ t + tb1 + tb2)
t.new <-t[length(t)]+seq(h)
tb1.new <- tb1[length(tb1)]+seq(h)
tb2.new <-  tb2[length(tb2)]+seq(h)
newdata <-cbind(t=t.new, tb1=tb1.new, tb2=tb2.new) %>%
as.data.frame()
fcasts.pw <-forecast(fit.pw, newdata = newdata)
fit.spline <-  tslm(marathon ~ t + I(t^2) + I(t^3)+
I(tb1^3)+I(tb2^3)
)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(marathon)+
autolayer(fitted(fit.lin), series = "선형")+
autolayer(fitted(fit.exp), series = "지수")+
autolayer(fitted(fit.pw), series = "조각별")+
autolayer(fitted(fit.spline), series = "3차 스플라인")+
autolayer(fcasts.pw, series="조각별")+
autolayer(fcasts.lin, series="선형", PI=F)+
autolayer(fcasts.exp, series="지수",PI=F)+
autolayer(fcasts.spl, series="3차 스플라인", PI=F)+
xlab("연도")+ylab("우승 기록(분)")+
ggtitle("보스턴 마라톤")+
guides(colour=guide_legend(title=" "))
marathon %>%
splinef(lambda=0) %>%
autoplot()+
xlab("연도")
marathon %>%
splinef(lambda = 0) %>%
checkresiduals()
library(fpp2)
autoplot(elecsales)
autoplot(elecsales)+ xlab("연도")+ ylab("GWh")+
ggtitle("연간 전력 판매: 남 호주")
elecsales
ma(elecsales,5)
autoplot(elecsales, series="데이터")+
autolayer(ma(elecsales,5), series = "5-MA")+
xlab("연도")+ylab("GWh")+
ggtitle("연간 전력 판매량: 남 호주")+
scale_colour_manual(values=c("데이터"="grey50","5-MA"="red"),
breaks=c("데이터","5-MA"))+
guides(colou=guide_legend(title=" "))
autoplot(elecsales, series="데이터")+
autolayer(ma(elecsales,3), series = "5-MA")+
xlab("연도")+ylab("GWh")+
ggtitle("연간 전력 판매량: 남 호주")+
scale_colour_manual(values=c("데이터"="grey50","5-MA"="red"),
breaks=c("데이터","5-MA"))+
guides(colou=guide_legend(title=" "))
autoplot(elecsales, series="데이터")+
autolayer(ma(elecsales,5), series = "5-MA")+
xlab("연도")+ylab("GWh")+
ggtitle("연간 전력 판매량: 남 호주")+
scale_colour_manual(values=c("데이터"="grey50","5-MA"="red"),
breaks=c("데이터","5-MA"))+
guides(colou=guide_legend(title=" "))
ma(elecsales,3)
ma(elecsales,2)
ma(elecsales,3)
ma(elecsales,5)
ma(elecsales,2)
(2354+2379)/2
(2354.34+2379.71)/2
(2318.52+2379.71)/2
ma(elecsales,4)
ma(elecsales,3)
(2354.34+2379.71+2318.52)/3
ma(elecsales,4)
ma(elecsales,2)
(2354.34+2379.71)/2
autoplot(elecequip, series="데이터")+
autolayer(ma(elecequip, 12), series="12-MA")+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조(유럽 지역)")+
scale_colour_manual(
values=c("데이터"="grey", "12-MA"="red"),
breaks=c("데이터","12-MA")
)+
guides(colour=guide_legend(title=" "))
elecequip %>%
decompose(type="multiplicative") %>%
autoplot()+ xlab("연도")+
ggtitle("전자 장비 지수의 고전적 곱셈 분해")
install.packages("seasonal")
library("seasonal")
library(seasonal)
elecequip %>%
seas(x11="")-> fit
fit
autoplot(fit)+
ggtitle("전자 장비 지수의 x11 분해")
library(fpp2)
library(fpp2)
#install.packages("seasonal")
autoplot(elecsales)+ xlab("연도")+ ylab("GWh")+
ggtitle("연간 전력 판매: 남 호주")
elecsales
ma(elecsales,2)
autoplot(elecsales, series="데이터")+
autolayer(ma(elecsales,5), series = "5-MA")+
xlab("연도")+ylab("GWh")+
ggtitle("연간 전력 판매량: 남 호주")+
scale_colour_manual(values=c("데이터"="grey50","5-MA"="red"),
breaks=c("데이터","5-MA"))+
guides(colou=guide_legend(title=" "))
(2354.34+2379.71)/2
(2318.52+2379.71)/2
autoplot(elecequip, series="데이터")+
autolayer(ma(elecequip, 12), series="12-MA")+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조(유럽 지역)")+
scale_colour_manual(
values=c("데이터"="grey", "12-MA"="red"),
breaks=c("데이터","12-MA")
)+
guides(colour=guide_legend(title=" "))
elecequip %>%
decompose(type="multiplicative") %>%
autoplot()+ xlab("연도")+
ggtitle("전자 장비 지수의 고전적 곱셈 분해")
library("seasonal")
library(seasonal)
elecequip %>%
seas(x11="")-> fit
fit
autoplot(fit)+
ggtitle("전자 장비 지수의 x11 분해")
autoplot(elecequip, series="데이터")+
autolayer(trendcycle(fit), series="추세")+
autolayer(seasadj(fit), series='계')
autoplot(elecequip, series="데이터")+
autolayer(trendcycle(fit), series="추세")+
autolayer(seasadj(fit), series='계절성으로 조정된 것')+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조 (유럽 지역)")+
scale_colour_manual(values = c("gray","blue","red"),
breaks=c("데이터","계절성으로 조정된것",
"추세세"))
autoplot(elecequip, series="데이터")+
autolayer(trendcycle(fit), series="추세")+
autolayer(seasadj(fit), series='계절성으로 조정된 것')+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조 (유럽 지역)")+
scale_colour_manual(values = c("gray","blue","red"),
breaks=c("데이터","계절성으로 조정된것",
"추세"))
autoplot(elecequip, series="데이터")+
autolayer(trendcycle(fit), series="추세")+
autolayer(seasadj(fit), series='계절성으로 조정된 것')+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조 (유럽 지역)")+
scale_colour_manual(values = c("gray","blue","red"),
breaks=c("데이터","계절성으로 조정된것",
"추세"))
autoplot(elecequip, series="데이터")+
autolayer(trendcycle(fit), series="추세")+
autolayer(seasadj(fit), series='계절성으로 조정된 것')+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조 (유럽 지역)")+
scale_colour_manual(values = c("gray","blue","red"),
breaks=c("데이터","계절성으로 조정된 것",
"추세"))
autoplot(elecequip, series="데이터")+
autolayer(trendcycle(fit), series="추세")+
autolayer(seasadj(fit), series='계절성으로 조정된 것')+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조 (유럽 지역)")+
scale_colour_manual(values = c("데이터"="gray","blue","red"),
breaks=c("데이터","계절성으로 조정된 것",
"추세"))
autoplot(elecequip, series="데이터")+
autolayer(trendcycle(fit), series="추세")+
autolayer(seasadj(fit), series='계절성으로 조정된 것')+
xlab("연도")+ylab("신규 주문 지수")+
ggtitle("전자 장비 제조 (유럽 지역)")+
scale_colour_manual(values = c("데이터"="gray",
"계절성으로 조정된 것"="blue",
"추세"="red"),
breaks=c("데이터","계절성으로 조정된 것",
"추세"))
fit %>%
seasonal() %>%
ggsubseriesplot()
elecequip %>%
seas() %>%
autoplot()+
ggtitle("전자 장비 지수의 SEATS분해")
elecequip %>%
stl(t.window=13, s.window="preiodic", robust=T) %>%
autoplot()
elecequip %>%
stl(t.window=13, s.window="periodic", robust=T) %>%
autoplot()
fit <- stl(elecequip, t.window=13, s.window="periodic", robust=T)
fit %>%
seasadj() %>%
navie() %>%
autoplot()+ylab("신규 구매 지수")+
ggtitle("계절성으로 조정된 데이터의 단순 예측값")
fit %>%
seasadj() %>%
naive() %>%
autoplot()+ylab("신규 구매 지수")+
ggtitle("계절성으로 조정된 데이터의 단순 예측값")
fit %>%
forecast(method="naive") %>%
autoplot() + ylab("신규 구매 지수")+
ggtitle("STL과 확률보행으로 얻은 예측값")
fcast <- stlf(elecequip, method='naive')
fcast
oildata <- window(oil, start = 1996)
autoplot(oildata)+
ylab("원유(백만 톤)")+xlab("연도")
library(fpp2)
oildata <- window(oil, start = 1996)
autoplot(oildata)+
ylab("원유(백만 톤)")+xlab("연도")
library(fpp2)
oildata <- window(oil, start = 1996)
autoplot(oildata)+
ylab("원유(백만 톤)")+xlab("연도")
oiddata <- window(oil, start=1996)
fc <- ses(oildata, h =5)
round(accuracy(fc),2)
autoplot(fc)+
autolayer(fitted(fc), series="적합값")+
ylab("원유(백만 톤)")+xlab("연도")+
ggtitle("단순 지수평활로 얻은 예측값")
air <-window(ausair, start=1990)
fc <- holt(air, h=5)
fc <- holt(air, h=15)
fc2 <-  holt(air, damped = T, phi = 0.9, h=15)
autoplot(air)+
autolayer(fc, series = "홀트 기법", PI=F)+
autolayer(fc2, series = "감쇠 홀트 기법", PI=F)+
ggtitle("홀트 기법으로 얻은 예측값")+xlab("연도")+
ylab("호주 항곡백 (백만 명)")+
guides(colour=guide_legend(title="예측값"))
autoplot(livestock)+
xlab("연도")+ylab("아시아의 양 목축 (단위:백만)")
e1 <- tsCV(livestock, ses, h =1)
e2 <- tsCV(livestock, holt, h=1)
e1 <- tsCV(livestock, ses, h =1)
e2 <- tsCV(livestock, holt, h=1)
e3 <- tsCV(livestock, holt, damped=T, h=1)
mean(e1^2, na.rm=T)
mean(e2^2, na.rm=T)
mean(e3^2, na.rm=T)
mean(abs(e1),na.rm=T)
mean(abs(e3),na.rm=T)
mean(abs(e2),na.rm=T)
mean(abs(e3),na.rm=T)
fc <-  hotl(livestock, damped=T)
fc <-  holt(livestock, damped=T)
fc[["model"]]
autoplot(fc)+
xlab("연도")+ylab("아시아의 양 목축 (단위 : 백만)")+
ggittle("감쇠 홀트 기법으로 얻은 예측값")
autoplot(fc)+
xlab("연도")+ylab("아시아의 양 목축 (단위 : 백만)")+
ggtitle("감쇠 홀트 기법으로 얻은 예측값")
aust <- window(austourists, start=2005)
fit1 <- hw(aust, seasonal = "additive")
fit2 <- hw(aust, seasonal = "multiplicative")
autoplot(aust)+
autolayer(fit1, series="HW 덧셈 예측", PI=F)+
autolayer(fit2, series = "HW 곱셉 예측", PI=F)+
xlab("연도")+
ylab("호주 국제선 여행객 숙박일 (단위:백만)")+
guides(colour=guide_legend(title="예측"))
str(aust)
hw(y, damped = T, seasonal = "multiplicative")
hw(aust, damped = T, seasonal = "multiplicative")
fc <- hw(subset(hyndsight, end=length(hyndsight)-35),
damped=T, seasonal = "multiplicative", h =35)
autoplot(hyndsight)+
autolayer(fc, series="HW곱셈 감쇠",PI=F)+
guides(colour=guide_legend(titile="일별 예측값"))
aust <- window(austourists, start=2005)
aust <- window(austourists, start=2005)
library(fpp2)
aust <- window(austourists, start=2005)
fit <- ets(aust)
fit
summary(fit)
autoplot(fit)+
ggtitle("ETS(M,A,M) 기법의 성분")
cbind('잔차'=residuals(fit),
'예측 오차'=residuals(fit, type='response')) %>%
autoplot(facet=T)+xlab("연도")+ylab(" ")
